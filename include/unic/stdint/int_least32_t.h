#if !defined( UNIC_INT_LEAST32_C ) && UNIC_CAN_MAP_AT_LEAST_32BIT
#include "_.h"

/* Since these macros can function as fallbacks check for originals 1st */

#ifdef INT_LEAST32_MAX
# define UNIC_INT_LEAST32_MAX INT_LEAST32_MAX
#elif UNIC_INT_WIDTH >= 32
# define UNIC_INT_LEAST32_MAX UNIC_INT_MAX
#else
# define UNIC_INT_LEAST32_MAX UNIC_LONG_MAX
#endif

#ifdef INT_LEAST32_MIN
# define UNIC_INT_LEAST32_MIN INT_LEAST32_MIN
#else
# define UNIC_INT_LEAST32_MIN UNIC___MIN(UNIC_INT_LEAST32_MAX)
#endif

#ifdef INT_LEAST32_END_BIT
# define UNIC_INT_LEAST32_END_BIT INT_LEAST32_END_BIT
#else
# define UNIC_INT_LEAST32_END_BIT UNIC_INT_LEAST32_MIN
#endif

#ifdef SIZEOF_SIZE
# define UNIC_SIZEOF_INT_LEAST32 SIZEOF_INT_LEAST32
#else
# define UNIC_SIZEOF_INT_LEAST32 SIZEOF_BY_IMAX(INT_LEAST32_MAX)
#endif

#ifdef INT_LEAST32_WIDTH
# define UNIC_INT_LEAST32_WIDTH INT_LEAST32_WIDTH
#else
# define UNIC_INT_LEAST32_WIDTH (UNIC_SIZEOF_INT_LEAST32 * UNIC_CHAR_BIT)
#endif

#ifdef INT_LEAST32_TYPE
# define UNIC_INT_LEAST32_TYPE INT_LEAST32_TYPE
#elif UNIC_INT_WIDTH >= 32
# define UNIC_INT_LEAST32_TYPE signed int
#else
# define UNIC_INT_LEAST32_TYPE signed long int
#endif

typedef UNIC_INT_LEAST32_TYPE unic_int_least32_t;

#ifdef INT_LEAST32_C
# define UNIC_INT_LEAST32_C INT_LEAST32_C
#elif UNIC_INT_WIDTH >= 32
# define UNIC_INT_LEAST32_C(VAL) VAL
#else
# define UNIC_INT_LEAST32_C(VAL) VAL##L
#endif

#ifdef PRI_INT_LEAST32
# define UNIC_PRI_INT_LEAST32 PRI_INT_LEAST32
#elif UNIC_INT_WIDTH >= 32
# define UNIC_PRI_INT_LEAST32
#else
# define UNIC_PRI_INT_LEAST32 "l"
#endif

#ifdef SCN_INT_LEAST32
# define UNIC_SCN_INT_LEAST32 SCN_INT_LEAST32
#elif UNIC_INT_WIDTH >= 32
# define UNIC_SCN_INT_LEAST32
#else
# define UNIC_SCN_INT_LEAST32 "l"
#endif

#define UNIC_PRIiINT_LEAST32 UNIC_PRI_INT_LEAST32 "i"
#define UNIC_PRIoINT_LEAST32 UNIC_PRI_INT_LEAST32 "o"
#define UNIC_PRIuINT_LEAST32 UNIC_PRI_INT_LEAST32 "u"
#define UNIC_PRIxINT_LEAST32 UNIC_PRI_INT_LEAST32 "x"
#define UNIC_PRIXINT_LEAST32 UNIC_PRI_INT_LEAST32 "X"

#define UNIC_SCNiINT_LEAST32 UNIC_SCN_INT_LEAST32 "i"
#define UNIC_SCNoINT_LEAST32 UNIC_SCN_INT_LEAST32 "o"
#define UNIC_SCNuINT_LEAST32 UNIC_SCN_INT_LEAST32 "u"
#define UNIC_SCNxINT_LEAST32 UNIC_SCN_INT_LEAST32 "x"
#define UNIC_SCNXINT_LEAST32 UNIC_SCN_INT_LEAST32 "X"

#ifdef UNIC_FALLBACK

# ifndef __int_least32_t_defined
#  define __int_least32_t_defined
typedef unic_int_least32_t int_least32_t;
# endif

#ifndef INT_LEAST32_MAX
# define INT_LEAST32_MAX UNIC_INT_LEAST32_MAX
#endif

#ifndef INT_LEAST32_MIN
# define INT_LEAST32_MIN UNIC_INT_LEAST32_MIN
#endif

#ifndef SIZEOF_INT_LEAST32
# define SIZEOF_INT_LEAST32 UNIC_SIZEOF_INT_LEAST32
#endif

#ifndef INT_LEAST32_WIDTH
# define INT_LEAST32_WIDTH UNIC_INT_LEAST32_WIDTH
#endif

#ifndef INT_LEAST32_TYPE
# define INT_LEAST32_TYPE UNIC_INT_LEAST32_TYPE
#endif

#ifndef INT_LEAST32_C
# define INT_LEAST32_C UNIC_INT_LEAST32_C
#endif

#ifndef PRIxINT_LEAST32
# define PRIiINT_LEAST32 UNIC_PRIiINT_LEAST32
# define PRIoINT_LEAST32 UNIC_PRIoINT_LEAST32
# define PRIuINT_LEAST32 UNIC_PRIuINT_LEAST32
# define PRIxINT_LEAST32 UNIC_PRIxINT_LEAST32
# define PRIXINT_LEAST32 UNIC_PRIXINT_LEAST32
#endif

#ifndef SCNxINT_LEAST32
# define SCNiINT_LEAST32 UNIC_SCNiINT_LEAST32
# define SCNoINT_LEAST32 UNIC_SCNoINT_LEAST32
# define SCNuINT_LEAST32 UNIC_SCNuINT_LEAST32
# define SCNxINT_LEAST32 UNIC_SCNxINT_LEAST32
# define SCNXINT_LEAST32 UNIC_SCNXINT_LEAST32
#endif

#endif /* UNIC_FALLBACK */

#endif
