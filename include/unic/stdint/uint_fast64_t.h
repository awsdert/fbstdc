#if !defined( UNIC_UINT_FAST64_C ) && UNIC_CAN_MAP_AT_LEAST_64BIT
#include "_.h"

/* Since these macros can function as fallbacks check for originals 1st */

#ifdef UINT_FAST64_MAX
# define UNIC_UINT_FAST64_MAX UINT_FAST64_MAX
#elif UNIC_INT_WIDTH >= 64
# define UNIC_UINT_FAST64_MAX UNIC_UINT_MAX
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_UINT_FAST64_MAX UNIC_ULONG_MAX
#else
# define UNIC_UINT_FAST64_MAX UNIC_ULLONG_MAX
#endif

#ifdef UINT_FAST64_END_BIT
# define UNIC_UINT_FAST64_END_BIT UINT_FAST64_END_BIT
#else
# define UNIC_UINT_FAST64_END_BIT (~(UNIC_UINT_MAX>>1))
#endif

#ifdef SIZEOF_UINT_FAST64
# define UNIC_SIZEOF_UINT_FAST64 SIZEOF_UINT_FAST64
#else
# define UNIC_SIZEOF_UINT_FAST64 SIZEOF_BY_UMAX(UNIC_UINT_FAST64_MAX)
#endif

#ifdef UINT_FAST64_WIDTH
# define UNIC_UINT_FAST64_WIDTH UINT_FAST64_WIDTH
#else
# define UNIC_UINT_FAST64_WIDTH (UNIC_SIZEOF_UINT_FAST64 * UNIC_CHAR_BIT)
#endif

#ifdef UINT_FAST64_TYPE
# define UNIC_UINT_FAST64_TYPE UINT_FAST64_TYPE
#elif UNIC_INT_WIDTH >= 64
# define UNIC_UINT_FAST64_TYPE unsigned int
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_UINT_FAST64_TYPE unsigned long int
#else
# define UNIC_UINT_FAST64_TYPE unsigned long long int
#endif

typedef UNIC_UINT_FAST64_TYPE unic_uint_fast64_t;

#ifdef UINT_FAST64_C
# define UNIC_UINT_FAST64_C UINT_FAST64_C
#elif UNIC_INT_WIDTH >= 64
# define UNIC_UINT_FAST64_C(VAL) VAL
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_UINT_FAST64_C(VAL) VAL##UL
#else
# define UNIC_UINT_FAST64_C(VAL) VAL##ULL
#endif

#ifdef PRI_UINT_FAST64
# define UNIC_PRI_UINT_FAST64 PRI_UINT_FAST64
#elif UNIC_INT_WIDTH >= 64
# define UNIC_PRI_UINT_FAST64
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_PRI_UINT_FAST64 "l"
#else
# define UNIC_PRI_UINT_FAST64 "ll"
#endif

#ifdef SCN_UINT_FAST64
# define UNIC_SCN_UINT_FAST64 SCN_UINT_FAST64
#elif UNIC_INT_WIDTH >= 64
# define UNIC_SCN_UINT_FAST64
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_SCN_UINT_FAST64 "l"
#else
# define UNIC_SCN_UINT_FAST64 "ll"
#endif

#define UNIC_PRIiUINT_FAST64 UNIC_PRI_UINT_FAST64 "i"
#define UNIC_PRIoUINT_FAST64 UNIC_PRI_UINT_FAST64 "o"
#define UNIC_PRIuUINT_FAST64 UNIC_PRI_UINT_FAST64 "u"
#define UNIC_PRIxUINT_FAST64 UNIC_PRI_UINT_FAST64 "x"
#define UNIC_PRIXUINT_FAST64 UNIC_PRI_UINT_FAST64 "X"

#define UNIC_SCNiUINT_FAST64 UNIC_SCN_UINT_FAST64 "i"
#define UNIC_SCNoUINT_FAST64 UNIC_SCN_UINT_FAST64 "o"
#define UNIC_SCNuUINT_FAST64 UNIC_SCN_UINT_FAST64 "u"
#define UNIC_SCNxUINT_FAST64 UNIC_SCN_UINT_FAST64 "x"
#define UNIC_SCNXUINT_FAST64 UNIC_SCN_UINT_FAST64 "X"

#ifdef UNIC_FALLBACK

# ifndef __uint_fast64_t_defined
#  define __uint_fast64_t_defined
typedef unic_uint_fast64_t uint_fast64_t;
# endif

#ifndef UINT_FAST64_MAX
# define UINT_FAST64_MAX UNIC_UINT_FAST64_MAX
#endif

#ifndef SIZEOF_UINT_FAST64
# define SIZEOF_UINT_FAST64 UNIC_SIZEOF_UINT_FAST64
#endif

#ifndef UINT_FAST64_WIDTH
# define UINT_FAST64_WIDTH UNIC_UINT_FAST64_WIDTH
#endif

#ifndef UINT_FAST64_TYPE
# define UINT_FAST64_TYPE UNIC_UINT_FAST64_TYPE
#endif

#ifndef UINT_FAST64_C
# define UINT_FAST64_C UNIC_UINT_FAST64_C
#endif

#ifndef PRIxUINT_FAST64
# define PRIiUINT_FAST64 UNIC_PRIiUINT_FAST64
# define PRIoUINT_FAST64 UNIC_PRIoUINT_FAST64
# define PRIuUINT_FAST64 UNIC_PRIuUINT_FAST64
# define PRIxUINT_FAST64 UNIC_PRIxUINT_FAST64
# define PRIXUINT_FAST64 UNIC_PRIXUINT_FAST64
#endif

#ifndef SCNxUINT_FAST64
# define SCNiUINT_FAST64 UNIC_SCNiUINT_FAST64
# define SCNoUINT_FAST64 UNIC_SCNoUINT_FAST64
# define SCNuUINT_FAST64 UNIC_SCNuUINT_FAST64
# define SCNxUINT_FAST64 UNIC_SCNxUINT_FAST64
# define SCNXUINT_FAST64 UNIC_SCNXUINT_FAST64
#endif

#endif /* UNIC_FALLBACK */

#endif
