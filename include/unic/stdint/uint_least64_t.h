#if !defined( UNIC_UINT_LEAST64_C ) && UNIC_CAN_MAP_AT_LEAST_64BIT
#include "_.h"

/* Since these macros can function as fallbacks check for originals 1st */

#ifdef UINT_LEAST64_MAX
# define UNIC_UINT_LEAST64_MAX UINT_LEAST64_MAX
#elif UNIC_INT_WIDTH >= 64
# define UNIC_UINT_LEAST64_MAX UNIC_UINT_MAX
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_UINT_LEAST64_MAX UNIC_ULONG_MAX
#else
# define UNIC_UINT_LEAST64_MAX UNIC_ULLONG_MAX
#endif

#ifdef UINT_LEAST64_END_BIT
# define UNIC_UINT_LEAST64_END_BIT UINT_LEAST64_END_BIT
#else
# define UNIC_UINT_LEAST64_END_BIT (~(UNIC_UINT_MAX>>1))
#endif

#ifdef SIZEOF_UINT_LEAST64
# define UNIC_SIZEOF_UINT_LEAST64 SIZEOF_UINT_LEAST64
#else
# define UNIC_SIZEOF_UINT_LEAST64 SIZEOF_BY_UMAX(UNIC_UINT_LEAST64_MAX)
#endif

#ifdef UINT_LEAST64_WIDTH
# define UNIC_UINT_LEAST64_WIDTH UINT_LEAST64_WIDTH
#else
# define UNIC_UINT_LEAST64_WIDTH (UNIC_SIZEOF_UINT_LEAST64 * UNIC_CHAR_BIT)
#endif

#ifdef UINT_LEAST64_TYPE
# define UNIC_UINT_LEAST64_TYPE UINT_LEAST64_TYPE
#elif UNIC_INT_WIDTH >= 64
# define UNIC_UINT_LEAST64_TYPE unsigned int
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_UINT_LEAST64_TYPE unsigned long int
#else
# define UNIC_UINT_LEAST64_TYPE unsigned long long int
#endif

typedef UNIC_UINT_LEAST64_TYPE unic_uint_least64_t;

#ifdef UINT_LEAST64_C
# define UNIC_UINT_LEAST64_C UINT_LEAST64_C
#elif UNIC_INT_WIDTH >= 64
# define UNIC_UINT_LEAST64_C(VAL) VAL
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_UINT_LEAST64_C(VAL) VAL##UL
#else
# define UNIC_UINT_LEAST64_C(VAL) VAL##ULL
#endif

#ifdef PRI_UINT_LEAST64
# define UNIC_PRI_UINT_LEAST64 PRI_UINT_LEAST64
#elif UNIC_INT_WIDTH >= 64
# define UNIC_PRI_UINT_LEAST64
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_PRI_UINT_LEAST64 "l"
#else
# define UNIC_PRI_UINT_LEAST64 "ll"
#endif

#ifdef SCN_UINT_LEAST64
# define UNIC_SCN_UINT_LEAST64 SCN_UINT_LEAST64
#elif UNIC_INT_WIDTH >= 64
# define UNIC_SCN_UINT_LEAST64
#elif UNIC_LONG_WIDTH >= 64
# define UNIC_SCN_UINT_LEAST64 "l"
#else
# define UNIC_SCN_UINT_LEAST64 "ll"
#endif

#define UNIC_PRIiUINT_LEAST64 UNIC_PRI_UINT_LEAST64 "i"
#define UNIC_PRIoUINT_LEAST64 UNIC_PRI_UINT_LEAST64 "o"
#define UNIC_PRIuUINT_LEAST64 UNIC_PRI_UINT_LEAST64 "u"
#define UNIC_PRIxUINT_LEAST64 UNIC_PRI_UINT_LEAST64 "x"
#define UNIC_PRIXUINT_LEAST64 UNIC_PRI_UINT_LEAST64 "X"

#define UNIC_SCNiUINT_LEAST64 UNIC_SCN_UINT_LEAST64 "i"
#define UNIC_SCNoUINT_LEAST64 UNIC_SCN_UINT_LEAST64 "o"
#define UNIC_SCNuUINT_LEAST64 UNIC_SCN_UINT_LEAST64 "u"
#define UNIC_SCNxUINT_LEAST64 UNIC_SCN_UINT_LEAST64 "x"
#define UNIC_SCNXUINT_LEAST64 UNIC_SCN_UINT_LEAST64 "X"

#ifdef UNIC_FALLBACK

# ifndef __uint_least64_t_defined
#  define __uint_least64_t_defined
typedef unic_uint_least64_t uint_least64_t;
# endif

#ifndef UINT_LEAST64_MAX
# define UINT_LEAST64_MAX UNIC_UINT_LEAST64_MAX
#endif

#ifndef SIZEOF_UINT_LEAST64
# define SIZEOF_UINT_LEAST64 UNIC_SIZEOF_UINT_LEAST64
#endif

#ifndef UINT_LEAST64_WIDTH
# define UINT_LEAST64_WIDTH UNIC_UINT_LEAST64_WIDTH
#endif

#ifndef UINT_LEAST64_TYPE
# define UINT_LEAST64_TYPE UNIC_UINT_LEAST64_TYPE
#endif

#ifndef UINT_LEAST64_C
# define UINT_LEAST64_C UNIC_UINT_LEAST64_C
#endif

#ifndef PRIxUINT_LEAST64
# define PRIiUINT_LEAST64 UNIC_PRIiUINT_LEAST64
# define PRIoUINT_LEAST64 UNIC_PRIoUINT_LEAST64
# define PRIuUINT_LEAST64 UNIC_PRIuUINT_LEAST64
# define PRIxUINT_LEAST64 UNIC_PRIxUINT_LEAST64
# define PRIXUINT_LEAST64 UNIC_PRIXUINT_LEAST64
#endif

#ifndef SCNxUINT_LEAST64
# define SCNiUINT_LEAST64 UNIC_SCNiUINT_LEAST64
# define SCNoUINT_LEAST64 UNIC_SCNoUINT_LEAST64
# define SCNuUINT_LEAST64 UNIC_SCNuUINT_LEAST64
# define SCNxUINT_LEAST64 UNIC_SCNxUINT_LEAST64
# define SCNXUINT_LEAST64 UNIC_SCNXUINT_LEAST64
#endif

#endif /* UNIC_FALLBACK */

#endif
